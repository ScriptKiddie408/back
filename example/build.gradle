plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.2.2"
    id "io.franzbecker.gradle-lombok" version "3.1.0"
}

version = "0.1"
group = "example"

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.24'
}

dependencies {
    //tag::lombok
    annotationProcessor "org.projectlombok:lombok"
    compileOnly "org.projectlombok:lombok"
    //end::lombok

    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")
    annotationProcessor("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-validation")

    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("io.micronaut.sql:micronaut-vertx-pg-client")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    implementation("io.micronaut:micronaut-inject")
    annotationProcessor(platform("io.micronaut:micronaut-bom:2.0.2"))
    implementation(platform("io.micronaut:micronaut-bom:2.0.2"))
    implementation("javax.inject:javax.inject:1")
    implementation 'io.projectreactor:reactor-core:3.4.24'
    implementation("io.micronaut.sql:micronaut-jooq")

    // security
//    implementation('io.micronaut.security:micronaut-security:3.8.3')
//    annotationProcessor("io.micronaut:micronaut-http-validation")
//    compileOnly "io.micronaut.security:micronaut-security-annotations"
//    implementation "io.micronaut.security:micronaut-security-jwt"
//    implementation("io.micronaut.security:micronaut-security-ldap")

//    implementation 'io.micronaut:micronaut-security:2.0.0.M2'
//    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
//    implementation("io.micronaut.security:micronaut-security-jwt")

}


application {
    mainClass.set("example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.*")
    }
}


